buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url 'http://repo.spring.io/plugins-release' }
    }

    dependencies {
        classpath 'org.owasp:dependency-check-gradle:3.1.2'
        classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.7'
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
        classpath 'io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.8.0'
    }
}

plugins {
    id 'pl.allegro.tech.build.axion-release' version '1.7.1'
}

apply plugin: 'io.codearte.nexus-staging'

scmVersion {
    tag {
        prefix = 'javers'
    }
}

subprojects {
    apply plugin: 'maven-publish'
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'propdeps'
    apply plugin: 'com.bmuschko.nexus'
    apply plugin: 'org.owasp.dependencycheck'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    project.group = 'org.javers'
    project.version = scmVersion.version

    repositories {
        mavenCentral()
    }

    dependencies {
        testCompile 'junit:junit:4.11'
        testCompile "org.spockframework:spock-core:$spockVersion"
        testCompile "org.codehaus.groovy:groovy-all:$groovyVersion"
        testCompile 'org.apache.commons:commons-lang3:3.3.2'
        testCompile 'ch.qos.logback:logback-classic:1.1.2'
        testCompile 'cglib:cglib-nodep:3.2.0'
        testCompile 'org.objenesis:objenesis:2.1'
        testCompile 'org.easytesting:fest-assert-core:2.0M10'
    }

    javadoc {
        options.noTimestamp()
    }

    test {
        testLogging {
            exceptionFormat = 'full'
            events 'failed'
        }
    }

    task example(dependsOn: 'cleanTest') {
        doLast {
            tasks.test.testLogging {
                events 'failed', 'passed'
                showStandardStreams = true
            }
            tasks.test.execute()
        }
    }

    //disable javadoc doclint for Java8
    if (JavaVersion.current().isJava8Compatible()) {
        allprojects {
            tasks.withType(Javadoc) {
                options.addStringOption('Xdoclint:none', '-quiet')
            }
        }
    }

    //com.bmuschko.nexus
    modifyPom {
        project {
            name 'JaVers'
            description 'JaVers - object auditing and diff framework for Java'
            url 'http://javers.org'
            inceptionYear '2013'

            scm {
                connection 'scm:git:https://github.com/javers/javers.git'
                url 'https://github.com/javers/javers'
                developerConnection 'scm:git:https://github.com/javers/javers.git'
            }

            scm {
                connection 'scm:git:https://github.com/javers/javers.git'
                url 'https://github.com/javers/javers'
            }

            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                }
            }

            developers {
                developer {
                    name 'Bartosz Walacik'
                }
                developer {
                    name 'Pawel Szymczyk'
                }
                developer {
                    name 'Michal Wesolowski'
                }
            }
        }
    }

    test {
        testLogging.exceptionFormat = 'full'
        testLogging.showStackTraces = true
    }

    publishing {
        publications {
            libraryJar(MavenPublication) {
                from components.java
            }
        }
    }
}

//io.codearte.gradle
nexusStaging {
    packageGroup = 'org.javers'
    numberOfRetries = 20
    delayBetweenRetriesInMillis = 3000
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.6'
}