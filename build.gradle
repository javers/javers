import java.time.Duration

buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
        maven { url 'https://repo.spring.io/plugins-release' }
    }

    dependencies {
        classpath 'org.owasp:dependency-check-gradle:3.1.2'
        classpath 'com.adarshr:gradle-test-logger-plugin:2.0.0'
     }
}

plugins {
    id 'pl.allegro.tech.build.axion-release' version '1.18.7'
    id 'com.adarshr.test-logger' version '3.2.0'
    id 'maven-publish'
    id 'org.jreleaser' version '1.19.0'
    id 'base'
}

version = scmVersion.version

subprojects {
    apply plugin: 'base'
    apply plugin: 'maven-publish'
    apply plugin: 'java-library'
    apply plugin: 'groovy'
    apply plugin: 'org.owasp.dependencycheck'
    apply plugin: 'com.adarshr.test-logger'

    project.group = 'org.javers'
    project.version = project.hasProperty("jitpack") ? rootProject.version : scmVersion.version

    repositories {
        mavenCentral()
    }

    java {
        withJavadocJar()
        withSourcesJar()

        registerFeature('optional') {
            usingSourceSet(sourceSets.main)
        }
    }

    dependencies {
        testImplementation "org.spockframework:spock-core:$spockVersion"
        testImplementation "org.apache.groovy:groovy-all:$groovyVersion"
        testImplementation 'org.apache.commons:commons-lang3:3.8.1'
        testImplementation 'ch.qos.logback:logback-classic:1.4.5'
        testImplementation 'cglib:cglib-nodep:3.2.0'
        testImplementation 'org.objenesis:objenesis:2.1'
        testImplementation 'org.easytesting:fest-assert-core:2.0M10'
    }

    javadoc {
        options.noTimestamp()
    }

    tasks.withType(Javadoc).configureEach {
        options.addStringOption('Xdoclint:none', '-quiet')
    }

    tasks.withType(JavaCompile).configureEach {
        options.compilerArgs << '-parameters'
    }

    task example(dependsOn: 'cleanTest') {
        doLast {
            tasks.test.testLogging {
                events 'failed', 'passed'
                showStandardStreams = true
            }
            tasks.test.execute()
        }
    }

    /*
    task sourcesJar(type: Jar) {
        from sourceSets.main.allJava
        archiveClassifier = 'sources'
    }
    task javadocJar(type: Jar) {
        from javadoc
        archiveClassifier = 'javadoc'
    }*/


    publishing {
        publications {
            maven(MavenPublication) {
                groupId = project.group
                artifactId = project.name

                from components.java

                pom {
                    name = 'JaVers Library'
                    description = 'JaVers - object auditing and diff framework for Java'
                    url = 'https://javers.org'

                    licenses {
                        license {
                            name = 'The Apache Software License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'bartoszwalacik'
                            name = 'Bartosz Walacik'
                        }
                    }
                    scm {
                        connection = 'scm:git:https://github.com/javers/javers.git'
                        developerConnection = 'scm:git:https://github.com/javers/javers.git'
                        url = 'https://github.com/javers/javers'
                    }
                }
            }
        }

        repositories {
            maven {
                //url = layout.buildDirectory.dir('staging-deploy')
                url = rootProject.layout.buildDirectory.dir('staging-deploy')
            }
        }
    }

    /*
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact sourcesJar
                artifact javadocJar

                pom {
                    name = 'JaVers Library'
                    description = 'JaVers - object auditing and diff framework for Java'
                    url = 'http://javers.org'
                    licenses {
                        license {
                            name = 'The Apache Software License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'javers'
                            name = 'JaVers Core Team'
                            email = 'javers@javers.org'
                        }
                    }
                    scm {
                        connection = 'scm:git:https://github.com/javers/javers.git'
                        developerConnection = 'scm:git:https://github.com/javers/javers.git'
                        url = 'https://github.com/javers/javers'
                    }
                }
            }
        }
    }*/

    test {
        useJUnitPlatform()

        testLogging {
            showStandardStreams = false
            exceptionFormat = 'full'
        }
    }
}

jreleaser {
    project {
        name = 'JaVers Library'
        description = 'JaVers - object auditing and diff framework for Java'
        website = 'https://javers.org'
        authors = ['Bartosz Walacik']
        license = 'Apache-2.0'
        java {
            groupId = 'org.javers'
            version = scmVersion.version
        }
    }
    signing {
        active = 'ALWAYS'
        armored = true
    }
    deploy {
        maven {
            mavenCentral {
                sonatype {
                    active = 'ALWAYS'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    namespace = 'org.javers'
                    stagingRepository('build/staging-deploy')
                }
            }
        }
    }
}

wrapper() {
    gradleVersion = '8.7'
}

